import os
import webapp2
from google.appengine.api import users
from oauth2client.appengine import StorageByKeyName
#from google.appengine.api import oauth, users, memcache
from oauth2client.client import flow_from_clientsecrets
from raceways.model import RacewaysUser

CLIENT_SECRETS = os.path.join(os.path.dirname(os.path.dirname(__file__)),
                              "client_secret.json")
STRAVA_SECRETS = os.path.join(os.path.dirname(os.path.dirname(__file__)),
                              "strava_secret.json")

class BaseHandler(webapp2.RequestHandler):
    def dispatch(self):
        self.user = users.get_current_user()

        if self.user:
            self.strava_storage = StorageByKeyName(RacewaysUser, self.user.user_id(), 'strava_credentials')
                
        self.strava_flow = flow_from_clientsecrets(
            STRAVA_SECRETS,
            scope="view_private",
            redirect_uri=self.request.host_url + '/login')
        
        # Get a session store for this request.
        try:
            # Dispatch the request.
            webapp2.RequestHandler.dispatch(self)
        finally:
            # Save all sessions.
            pass
            
